
** 백테스트와 겹치는 부분이 많음
** 백테스트 코드의 주석을 먼저 보고 이해하는 것을 추천합니다.

봇 클래스 + 각종 설정값 -> 봇 객체 생성.

봇은 각종 설정값(파라미터)를 바탕으로

봇 클래스 내부의 timerTask를 주기적으로(거래간격)실행.

timer의 scheduleAtFixedRate를 사용.

1) 종료 기간이 초과됐거나

2) 사용자가 강제로 종료버튼을 클릭해 trade테이블의 status가 0으로 바뀌면 

종료됨. timer.cancel() & this.cancel()



#유의점!
트레이딩봇의 IndicatorFunction은 현재 시점 기준으로 '갯수'를 가지고 옴.
즉, 시간상 10일 뒤 같은 개념이 아니라 디비의 데이터 상위 10개를 가지고 오는 식.
(ex, 유저가 30일 이동평균을 사용한다면 현재는 디비의 데이터 상위 30개를 가지고 옴)
따라서 ohlcMaker가 멈추면 계속 같은 데이터를 가지고 지표를 계산하는 '오류'가 발생할 수 있음.

IndicatorFunction에 sql문을 2가지를 넣어두었음.

하나는 설명한 것 처럼 갯수를 가지고 오는거고,
다른 하나는 시간상 데이터를 가지고 오는 쿼리.

시간상 데이터를 가지고 오는 것에도 문제점은 있는데,
(ex, 유저가 30일 이동평균을 사용한다면 현재 시점을 기준으로 30일 전까지의 데이터를 select, 30개 일지 아닐지는 확실X)
1) ohlc데이터가 제대로 쌓이지 않아 중간에 빈 데이터가 생긴다면 
유저는 30일 이동평균을 사용하였지만 실제로는 28, 29일 이동평균을 사용하는 경우가 생길 수 있음.

2) 거래소API에 오류가 생기면 현재 ohlcMaker의 코드상 '이전 OHLC + volume = 0'의 데이터가 들어감.
즉 1시간 동안 api가 먹통이라면 5분OHLC경우 1시간 내내 일직선으로 표시가 됨(볼륨은 0)
-> 이 경우를 어떻게 처리할 지 좀 더 고심해야 함.
 
